name: 04-Check-README

on:
  pull_request_target:
    types: [opened, synchronize, edited]

jobs:
  Check-README:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: SiliconLabsSoftware

      - name: Checkout project repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ github.event.repository.name }}
          ref: ${{ github.event.pull_request.head.ref }}
          path: 'projects'
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: '0'

      - name: Checkout scripts branch
        uses: actions/checkout@v4
        with:
          repository: SiliconLabsSoftware/aep_ci_tools
          ref: 'pull_request_process'
          token: ${{ steps.app-token.outputs.token }}
          path: 'pr_check'

      - name: Poll the change
        run: |
          if [[ ${{ github.event.pull_request.head.ref }} == "main" || ${{ github.event.pull_request.head.ref }} == "master" ]]; then
            rm -rf projects
            
            git clone https://github.com/${{ github.event.pull_request.head.user.login }}/${{ github.event.repository.name }}.git projects
            cd projects
            git remote add upstream $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git
            git fetch upstream
            git diff --name-only upstream/main HEAD | grep '/' | cut -d'/' -f1 | sort | uniq > git_log.txt
            grep -v "README.md\\|.github\\|LICENSE\\|templates.xml\\|tools" git_log.txt > git_diff.txt

            xargs -I{} -a git_diff.txt find {} -type f -name "*.[ch]" > source_list.txt
            xargs -I{} -a git_diff.txt find {} -type f -name "*.slcp" > solution_list.txt

            if ! [ -s source_list.txt -o -s solution_list.txt ]; then
              printf 'Skip check. No changed project found.' >> git_diff.txt
            fi
          
          else
            # For internal
            echo ${{ github.event.pull_request.head.user.login }}
            export target_branch=${{ github.event.pull_request.base.ref }}
            bash pr_check/scripts/check_changed_projects.sh $target_branch          
          fi

          # For debug
          cat git_diff.txt

          export REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d "/" -f 2)
          echo "repo=$REPO_NAME" >> $GITHUB_ENV  

      - name: Check README.md files
        run: |
          cd projects
          bash ${{ github.workspace }}/pr_check/scripts/check_readme_file_sandbox.sh git_diff.txt > readme_file_report.log
          GREP_COLORS='mt=32' grep --color=always 'PASS\|$' readme_file_report.log | GREP_COLORS='mt=31' grep --color=always 'FAILURE\|$'
          if grep -qe "FAILURE" readme_file_report.log; then
            echo "README.md file did not follow standard structure. Pls correct it."
            exit 1
          else
            echo "README.md file followed standard structure"
          fi
